---
- name: Enable Vulkan video decode
  ansible.builtin.copy:
    content: |
             export ANV_VIDEO_DECODE=1
             export ANV_VIDEO_ENCODE=1
             #export ANV_DEBUG=video-decode,video-encode
    dest: /etc/profile.d/vulkan.sh
    mode: "0644"
- name: Prepare target basics
  ansible.builtin.dnf:
    name:
      - ansible-core
      - ansible-collection-community-general
      - ansible-collection-ansible-posix
    state: present
- name: Install langpacks
  ansible.builtin.dnf:
    name:
      - langpacks-en
      - langpacks-cs
    state: present
- name: Set timezone
  community.general.timezone:
    name: "Europe/Prague"
- name: Install Others
  ansible.builtin.dnf:
    name:
      - "@multimedia"
      #
      - ansible-lint
      - bat
      - btrfsmaintenance
      - cheese
      - clamtk
      - compsize
      - cpufetch
      - distrobox
      - duf
      - egl-utils
      - fastfetch
      - ffmpeg-free
      - firewalld
      - git
      - gnome-backgrounds-extras
      - gnome-firmware
      - gnome-shell-extension-appindicator
      - gnome-shell-extension-background-logo
      - gnome-tweaks
      - htop
      - inxi
      - lame
      - libva-utils
      - lm_sensors
      - lshw
      - mc
      - mmv
      - mozilla-openh264
      - ncdu
      - nvme-cli
      - powertop
      - pwgen
      - ramalama
      - remove-retired-packages
      - rpmconf
      - screenfetch
      - ShellCheck
      - smartmontools
      - pwgen
      - tldr
      - tmux
      - tuned-utils
      - vim
      - vulkan-tools
      - wget
      - xlsclients
    state: present
- name: Enable fstrim timer
  ansible.builtin.service:
    name: fstrim.timer
    enabled: true
- name: Save list of btrfs mount points
  ansible.builtin.shell:
    cmd: set -o pipefail && /usr/bin/grep btrfs /etc/fstab | /usr/bin/awk '{ print $2 }' | /usr/bin/tr '\n' ':' | /usr/bin/sed 's/.$//'
  register: fstab_mounts
  changed_when: false
- name: Config defrag paths
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/btrfsmaintenance
    regexp: '^BTRFS_DEFRAG_PATHS='
    line: BTRFS_DEFRAG_PATHS="{{ fstab_mounts.stdout }}"
- name: Enable defrag timer
  ansible.builtin.service:
    name: btrfs-defrag.timer
    enabled: true
- name: Config balance paths
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/btrfsmaintenance
    regexp: '^BTRFS_BALANCE_MOUNTPOINTS='
    line: BTRFS_BALANCE_MOUNTPOINTS="auto"
- name: Enable balance timer
  ansible.builtin.service:
    name: btrfs-balance.timer
    enabled: true
- name: Config scrub paths
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/btrfsmaintenance
    regexp: '^BTRFS_SCRUB_MOUNTPOINTS='
    line: BTRFS_SCRUB_MOUNTPOINTS="auto"
- name: Enable scrub timer
  ansible.builtin.service:
    name: btrfs-scrub.timer
    enabled: true
- name: Test if system has battery
  ansible.builtin.command:
    cmd: test -d /sys/class/power_supply/BAT0 -o -d /sys/class/power_supply/macsmc-battery
  register: battery_status
  changed_when: false
  ignore_errors: true
- name: Update Writeback Time
  ansible.builtin.copy:
    content: |
             vm.laptop_mode = 5
             vm.dirty_writeback_centisecs = 1500
    dest: /etc/sysctl.d/dirty.conf
    mode: "0644"
  when: battery_status.rc == 0
- name: Disable NMI watchdog
  ansible.builtin.copy:
    content: kernel.nmi_watchdog = 0
    dest: /etc/sysctl.d/disable_watchdog.conf
    mode: "0644"
- name: Configure sata power mgmt
  community.general.ini_file:
    path: /usr/lib/tuned/profiles/balanced/tuned.conf
    section: scsi_host
    option: alpm
    value: med_power_with_dipm
    mode: "0644"
- name: Check if ASPM is set
  ansible.builtin.command:
    cmd: grep pcie_aspm /proc/cmdline
  register: aspm_status
  changed_when: false
  ignore_errors: true
- name: Set ASPM
  ansible.builtin.command:
    cmd: grubby --args="pcie_aspm.policy=powersave" --update-kernel=ALL
  changed_when: false
  when: aspm_status.rc == 1
- name: Use zstd for zram
  community.general.ini_file:
    path: /usr/lib/systemd/zram-generator.conf
    section: zram0
    option: compression-algorithm
    value: zstd
    mode: "0644"
- name: Disable WoL
  ansible.builtin.copy:
    content: |
             ACTION=="add", SUBSYSTEM=="net", NAME=="en*", RUN+="/usr/bin/ethtool -s $name wol d"
             ACTION=="add", SUBSYSTEM=="net", NAME=="wl*", ATTR{device/power/wakeup}="disabled"
    dest: /etc/udev/rules.d/wol.rules
    mode: "0644"
- name: Enable net powersaving
  ansible.builtin.copy:
    content: |
             ACTION=="add", SUBSYSTEM=="net", NAME=="en*", RUN+="/usr/bin/ethtool --set-eee $name eee on"
             ACTION=="add", SUBSYSTEM=="net", NAME=="wl*", RUN+="/usr/bin/iw dev $name set power_save on"
    dest: /etc/udev/rules.d/net_power_save.rules
    mode: "0644"
- name: Autosuspend newly added USB devices
  ansible.builtin.copy:
    content: |
             ACTION=="add", SUBSYSTEM=="usb", TEST=="power/control", ATTR{power/control}="auto"
    dest: /etc/udev/rules.d/usb_power_save.rules
    mode: "0644"
- name: Autosuspend PCI devices
  ansible.builtin.copy:
    content: |
             SUBSYSTEM=="pci", ATTR{power/control}="auto"
             SUBSYSTEM=="ata_port", KERNEL=="ata*", ATTR{device/power/control}="auto"
    dest: /etc/udev/rules.d/pci_pm.rules
    mode: "0644"
- name: Check if USB suspend is set
  ansible.builtin.command:
    cmd: grep usbcore /proc/cmdline
  register: usbcore
  changed_when: false
  ignore_errors: true
- name: Set USB suspend
  ansible.builtin.command:
    cmd: grubby --args="usbcore.autosuspend=60" --update-kernel=ALL
  changed_when: false
  when: usbcore.rc == 1
- name: Install dnf-automatic
  ansible.builtin.dnf:
    name:
      - dnf-automatic
    state: present
- name: Enable auto-update
  ansible.builtin.copy:
    content: |
             [commands]
             apply_updates = yes
    dest: /etc/dnf/automatic.conf
    mode: "0644"
- name: Enable dnf-automatic timer
  ansible.builtin.service:
    name: dnf-automatic.timer
    enabled: true
