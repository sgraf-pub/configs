---
  #
  # Check if var_user is valid
  #
  - name: Check if username is valid
    stat: path="/home/{{ var_user }}"
    register: st
  - name: Error if username is invalid
    fail: msg="Invalid username"
    when: st.stat.exists == False

  #
  # Setup htop
  #
  - name: Create htoprc dir
    file: path=/home/{{ var_user }}/.config/htop state=directory mode=0755 owner={{ var_user }} group={{ var_user }}
    become: true
    become_user: "{{ var_user }}"
  - name: Copy htoprc file
    copy: src=htoprc dest=/home/{{ var_user }}/.config/htop/htoprc mode=0600 owner={{ var_user }} group={{ var_user }}
    become: true
    become_user: "{{ var_user }}"
 
  #
  # Setup vim
  #
  - name: Copy config of vim
    copy: src=vimrc dest=/home/{{ var_user }}/.vimrc mode=0644
    become: true
    become_user: "{{ var_user }}"
 
  #
  # Setup readline
  #
  - name: Copy config for readline
    copy: src=inputrc dest=/home/{{ var_user }}/.inputrc mode=0644
    become: true
    become_user: "{{ var_user }}"
 
  #
  # Setup bash prompt
  #
  - name: Copy config of bash prompt
    copy: src=bashrc.ps1.sh dest=/home/{{ var_user }}/.bashrc.ps1.sh mode=0755
    become: true
    become_user: "{{ var_user }}"
  - name: Load new bash prompt by default
    lineinfile: dest="/home/{{ var_user }}/.bashrc" line="source ~/.bashrc.ps1.sh"
    become: true
    become_user: "{{ var_user }}"
 
  #
  # Setup tmux
  #
  - name: Copy config of tmux
    copy: src=tmux.conf dest=/home/{{ var_user }}/.tmux.conf mode=0644
    become: true
    become_user: "{{ var_user }}"

  #
  # Setup dnsmasq
  #
  - name: Enable dnsmasq
    ini_file: dest=/etc/NetworkManager/NetworkManager.conf section=main option=dns value=dnsmasq
    become: true
    become_user: root
