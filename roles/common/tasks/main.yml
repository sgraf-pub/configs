---
  #
  # Set automatic makecache for dnf
  #
  - name: Enable regular dnf makecache
    service: name=dnf-makecache.timer state=started enabled=yes

  # Enable TRIM
  - name: Enable weekly FS TRIM
    service: name=fstrim.timer state=started enabled=yes
  - name: Fix /etc/crypttab
    replace: dest=/etc/crypttab regexp='^(.*)none $' replace='\1none discard' backup=yes
    register: result1
  - name: Check if /etc/crypttab is in initrd
    shell: lsinitrd /boot/initramfs-$(uname -r).img etc/crypttab
    register: result2
    changed_when: False
  - name: Fix initramfs
    shell: dracut --force -I /etc/crypttab
    when: result2.stdout == "" or result1.changed

  #
  # Install languages
  #
  - name: Install Czech
    dnf: name=langpacks-cs state=present

  - name: Install English
    dnf: name=langpacks-en state=present

  #
  # Check if var_user is valid
  #
  - name: Check if username is valid
    shell: ls -d /home/{{ var_user }}

  #
  # Fix groups membership
  #
  - name: Add user to lp group
    user: name={{ var_user}} append=yes groups=lp

  #
  # Setup htop
  #
  - name: Check htoprc
    shell: ls -d /home/{{ var_user }}/.config/htop/
    register: result
    ignore_errors: True
    changed_when: "result.rc != 0"
  - name: Create htoprc dir
    file: path=/home/{{ var_user }}/.config/htop state=directory mode=755 owner={{ var_user }} group={{ var_user }}
    when: result is failed
  - name: Copy htoprc file
    copy: src=htoprc dest=/home/{{ var_user }}/.config/htop/htoprc mode=600 owner={{ var_user }} group={{ var_user }}

  #
  # Setup vim
  #
  - name: Copy config of vim
    copy: src=vimrc dest={{ item }}/.vimrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup readline
  #
  - name: Copy config for readline
    copy: src=inputrc dest={{ item }}/.inputrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup bash prompt
  #
  - name: Copy config of bash prompt
    copy: src=bashrc.ps1.sh dest={{ item }}/.bashrc.ps1.sh mode=755
    with_items: [/root, "/home/{{ var_user }}"]
  - name: Load new bash prompt by default
    lineinfile: dest="{{ item }}/.bashrc" line="source ~/.bashrc.ps1.sh"
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup screen
  #
  - name: Copy config of screen
    copy: src=screenrc dest={{ item }}/.screenrc mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup tmux
  #
  - name: Copy config of tmux
    copy: src=tmux.conf dest={{ item }}/.tmux.conf mode=644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup dnsmasq
  #
  - name: Enable dnsmasq
    ini_file: dest=/etc/NetworkManager/NetworkManager.conf section=main option=dns value=dnsmasq
  - name: Fix default dnsmasq config
    copy: src=dnsmasq.params.conf dest=/etc/NetworkManager/dnsmasq.d/dnsmasq.params.conf

  #
  # Setup journald
  #
  - name: Limit max size of journald logs
    ini_file: dest=/etc/systemd/journald.conf section=Journal option=SystemMaxUse value=500M

  #
  # Fix mc file highliting
  #
  - name: Install MC
    dnf: name=mc state=present
  - name: Create directory for default skin
    file: path=/home/{{ var_user }}/.local/share/mc/skins state=directory mode=755 owner={{ var_user }} group={{ var_user }}
  - name: Copy default skin
    copy: src=/usr/share/mc/skins/default.ini dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini"
  - name: Disable temp highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    temp =" line="    temp ="
  - name: Disable archive highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    archive =" line="    archive ="
  - name: Disable doc highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    doc =" line="    doc ="
  - name: Disable source highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    source =" line="    source ="
  - name: Disable media highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    media =" line="    media ="
  - name: Disable graph highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    graph =" line="    graph ="
  - name: Disable database highlight
    lineinfile: dest="/home/{{ var_user }}/.local/share/mc/skins/default.ini" regexp="^    database =" line="    database ="

  - name: Enable FlatHub
    shell: "flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo"

  - name: Enable WinePak
    shell: "flatpak remote-add --if-not-exists winepak https://dl.winepak.org/repo/winepak.flatpakrepo"

