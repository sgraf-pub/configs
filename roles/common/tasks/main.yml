---
  #
  # Install languages
  #
  - name: Install Czech
    dnf: name=langpacks-cs state=present

  - name: Install English
    dnf: name=langpacks-en state=present

  #
  # Check if var_user is valid
  #
  - name: Check if username is valid
    stat: path="/home/{{ var_user }}"
    register: st
  - name: Error if username is invalid
    fail: msg="Invalid username"
    when: st.stat.exists == False

  #
  # Fix groups membership
  #
  - name: Add user to lp group
    user: name={{ var_user}} append=yes groups=lp

  #
  # Setup htop
  #
  - name: Create htoprc dir
    file: path=/home/{{ var_user }}/.config/htop state=directory mode=0755 owner={{ var_user }} group={{ var_user }}
  - name: Copy htoprc file
    copy: src=htoprc dest=/home/{{ var_user }}/.config/htop/htoprc mode=0600 owner={{ var_user }} group={{ var_user }}

  #
  # Setup vim
  #
  - name: Copy config of vim
    copy: src=vimrc dest={{ item }}/.vimrc mode=0644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup readline
  #
  - name: Copy config for readline
    copy: src=inputrc dest={{ item }}/.inputrc mode=0644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup bash prompt
  #
  - name: Copy config of bash prompt
    copy: src=bashrc.ps1.sh dest={{ item }}/.bashrc.ps1.sh mode=0755
    with_items: [/root, "/home/{{ var_user }}"]
  - name: Load new bash prompt by default
    lineinfile: dest="{{ item }}/.bashrc" line="source ~/.bashrc.ps1.sh"
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup screen
  #
  - name: Copy config of screen
    copy: src=screenrc dest={{ item }}/.screenrc mode=0644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup tmux
  #
  - name: Copy config of tmux
    copy: src=tmux.conf dest={{ item }}/.tmux.conf mode=0644
    with_items: [/root, "/home/{{ var_user }}"]

  #
  # Setup dnsmasq
  #
  - name: Enable dnsmasq
    ini_file: dest=/etc/NetworkManager/NetworkManager.conf section=main option=dns value=dnsmasq
  - name: Fix default dnsmasq config
    copy: src=dnsmasq.params.conf dest=/etc/NetworkManager/dnsmasq.d/dnsmasq.params.conf

  - name: Enable FlatHub
    flatpak_remote: name=flathub state=present flatpakrepo_url="https://flathub.org/repo/flathub.flatpakrepo"

  - name: Enable WinePak
    flatpak_remote: name=winepak state=present flatpakrepo_url="https://dl.winepak.org/repo/winepak.flatpakrepo"

  - name: Enable official Fedora flatpak repo
    flatpak_remote: name=fedora state=present flatpakrepo_url="oci+https://registry.fedoraproject.org"

