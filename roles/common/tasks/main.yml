---
#
# Check if var_user is valid
#
- name: Check if username is valid
  ansible.builtin.stat:
    path: "{{ var_home }}"
  register: st
- name: Error if username is invalid
  ansible.builtin.fail:
    msg: "Invalid username"
  when: not st.stat.exists

#
# Setup vim
#
- name: Copy config of vim
  ansible.builtin.copy:
    src: vimrc
    dest: "{{ var_home }}/.vimrc"
    mode: "0644"
  become: true
  become_user: "{{ var_user }}"

#
# Setup readline
#
- name: Copy config for readline
  ansible.builtin.copy:
    src: inputrc
    dest: "{{ var_home }}/.inputrc"
    mode: "0644"
  become: true
  become_user: "{{ var_user }}"

#
# Setup bash prompt
#
- name: Copy config of bash prompt
  ansible.builtin.copy:
    src: bashrc.ps1.sh
    dest: "{{ var_home }}/.bashrc.ps1.sh"
    mode: "0644"
  become: true
  become_user: "{{ var_user }}"
- name: Load new bash prompt by default
  ansible.builtin.lineinfile:
    dest: "{{ var_home }}/.bashrc"
    line: "source ~/.bashrc.ps1.sh"
    mode: "0644"
  become: true
  become_user: "{{ var_user }}"
- name: Remove duplicates from history file
  ansible.builtin.lineinfile:
    dest: "{{ var_home }}/.bashrc"
    line: "export HISTCONTROL=erasedups"
  become: true
  become_user: "{{ var_user }}"
- name: Set reasonable history size
  ansible.builtin.lineinfile:
    dest: "{{ var_home }}/.bashrc"
    line: "export HISTSIZE=10000"
  become: true
  become_user: "{{ var_user }}"
- name: Allow forward history search with Ctrl+S
  ansible.builtin.lineinfile:
    dest: "{{ var_home }}/.bashrc"
    line: "[[ $- == *i* ]] && stty -ixon"
  become: true
  become_user: "{{ var_user }}"

#
# Setup tmux
#
- name: Copy config of tmux
  ansible.builtin.copy:
    src: tmux.conf
    dest: "{{ var_home }}/.tmux.conf"
    mode: "0644"
  become: true
  become_user: "{{ var_user }}"

#
# Update script
#
- name: Creates directory
  ansible.builtin.file:
    path: "{{ var_home }}/.local/bin"
    state: directory
    mode: "0755"
  become: true
  become_user: "{{ var_user }}"
  when: ansible_distribution != 'MacOSX'
# - name: Add update script
#   ansible.builtin.copy: src=up dest={{ var_home }}/.local/bin/up mode=0755
#   become: true
#   become_user: "{{ var_user }}"
